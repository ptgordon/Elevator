|multi_elevator
CLOCK_50 => button_decoder:rdecoder.clk
CLOCK_50 => button_decoder:odecoder.clk
CLOCK_50 => modified_counter:counter1.clk
CLOCK_50 => modified_counter:counter2.clk
CLOCK_50 => elevator_unit_v1:ev1.clk
CLOCK_50 => elevator_unit_v1:ev2.clk
CLOCK_50 => generic_multiplexer:cfmultiplexer.clk
CLOCK_50 => generic_multiplexer:ocmultiplexer.clk
CLOCK_50 => generic_multiplexer:smmultiplexer.clk
CLOCK_50 => elevator_cortex:cortex.clk
CLOCK_50 => up_down_display:uddisplay.clk
SW[0] => elevator_unit_v1:ev1.request_floor[0]
SW[0] => elevator_unit_v1:ev2.request_floor[0]
SW[0] => display_driver:request_display.input[0]
SW[1] => elevator_unit_v1:ev1.request_floor[1]
SW[1] => elevator_unit_v1:ev2.request_floor[1]
SW[1] => display_driver:request_display.input[1]
SW[2] => elevator_unit_v1:ev1.request_floor[2]
SW[2] => elevator_unit_v1:ev2.request_floor[2]
SW[2] => display_driver:request_display.input[2]
SW[3] => elevator_unit_v1:ev1.request_floor[3]
SW[3] => elevator_unit_v1:ev2.request_floor[3]
SW[3] => display_driver:request_display.input[3]
SW[4] => elevator_cortex:cortex.call_floor[0]
SW[4] => display_driver:call_display.input[0]
SW[4] => up_down_display:uddisplay.call[0]
SW[5] => elevator_cortex:cortex.call_floor[1]
SW[5] => display_driver:call_display.input[1]
SW[5] => up_down_display:uddisplay.call[1]
SW[6] => elevator_cortex:cortex.call_floor[2]
SW[6] => display_driver:call_display.input[2]
SW[6] => up_down_display:uddisplay.call[2]
SW[7] => elevator_cortex:cortex.call_floor[3]
SW[7] => display_driver:call_display.input[3]
SW[7] => up_down_display:uddisplay.call[3]
SW[8] => button_decoder:rdecoder.output_sel[0]
SW[8] => button_decoder:odecoder.output_sel[0]
SW[8] => generic_multiplexer:cfmultiplexer.input_sel[0]
SW[8] => generic_multiplexer:ocmultiplexer.input_sel[0]
SW[8] => generic_multiplexer:smmultiplexer.input_sel[0]
SW[8] => display_driver:elevator_number.input[0]
SW[9] => ~NO_FANOUT~
KEY[0] => button_decoder:rdecoder.input
KEY[1] => button_decoder:odecoder.input
KEY[2] => elevator_cortex:cortex.down_button
KEY[3] => elevator_cortex:cortex.up_button
LEDR[0] << generic_multiplexer:smmultiplexer.output[0]
LEDR[1] << generic_multiplexer:smmultiplexer.output[1]
LEDR[2] << generic_multiplexer:smmultiplexer.output[2]
LEDR[3] << generic_multiplexer:smmultiplexer.output[3]
LEDR[4] << generic_multiplexer:smmultiplexer.output[4]
LEDR[5] << generic_multiplexer:smmultiplexer.output[5]
LEDR[6] << generic_multiplexer:smmultiplexer.output[6]
LEDR[7] << generic_multiplexer:smmultiplexer.output[7]
LEDR[8] << generic_multiplexer:smmultiplexer.output[8]
LEDR[9] << generic_multiplexer:smmultiplexer.output[9]
HEX0[0] << display_driver:current_display.display[0]
HEX0[1] << display_driver:current_display.display[1]
HEX0[2] << display_driver:current_display.display[2]
HEX0[3] << display_driver:current_display.display[3]
HEX0[4] << display_driver:current_display.display[4]
HEX0[5] << display_driver:current_display.display[5]
HEX0[6] << display_driver:current_display.display[6]
HEX1[0] << open_close_display:door_display.display[0]
HEX1[1] << open_close_display:door_display.display[1]
HEX1[2] << open_close_display:door_display.display[2]
HEX1[3] << open_close_display:door_display.display[3]
HEX1[4] << open_close_display:door_display.display[4]
HEX1[5] << open_close_display:door_display.display[5]
HEX1[6] << open_close_display:door_display.display[6]
HEX2[0] << display_driver:request_display.display[0]
HEX2[1] << display_driver:request_display.display[1]
HEX2[2] << display_driver:request_display.display[2]
HEX2[3] << display_driver:request_display.display[3]
HEX2[4] << display_driver:request_display.display[4]
HEX2[5] << display_driver:request_display.display[5]
HEX2[6] << display_driver:request_display.display[6]
HEX3[0] << display_driver:call_display.display[0]
HEX3[1] << display_driver:call_display.display[1]
HEX3[2] << display_driver:call_display.display[2]
HEX3[3] << display_driver:call_display.display[3]
HEX3[4] << display_driver:call_display.display[4]
HEX3[5] << display_driver:call_display.display[5]
HEX3[6] << display_driver:call_display.display[6]
HEX4[0] << display_driver:elevator_number.display[0]
HEX4[1] << display_driver:elevator_number.display[1]
HEX4[2] << display_driver:elevator_number.display[2]
HEX4[3] << display_driver:elevator_number.display[3]
HEX4[4] << display_driver:elevator_number.display[4]
HEX4[5] << display_driver:elevator_number.display[5]
HEX4[6] << display_driver:elevator_number.display[6]
HEX5[0] << up_down_display:uddisplay.display[0]
HEX5[1] << up_down_display:uddisplay.display[1]
HEX5[2] << up_down_display:uddisplay.display[2]
HEX5[3] << up_down_display:uddisplay.display[3]
HEX5[4] << up_down_display:uddisplay.display[4]
HEX5[5] << up_down_display:uddisplay.display[5]
HEX5[6] << up_down_display:uddisplay.display[6]


|multi_elevator|button_decoder:rdecoder
clk => output_array[0]~reg0.CLK
clk => output_array[1]~reg0.CLK
clk => i_output[0].CLK
clk => i_output[1].CLK
input => i_output[0].DATAIN
output_sel[0] => ShiftLeft0.IN1
output_array[0] <= output_array[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output_array[1] <= output_array[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|multi_elevator|button_decoder:odecoder
clk => output_array[0]~reg0.CLK
clk => output_array[1]~reg0.CLK
clk => i_output[0].CLK
clk => i_output[1].CLK
input => i_output[0].DATAIN
output_sel[0] => ShiftLeft0.IN1
output_array[0] <= output_array[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output_array[1] <= output_array[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|multi_elevator|modified_counter:counter1
clk => count[0]~reg0.CLK
clk => count[0]~en.CLK
clk => count[1]~reg0.CLK
clk => count[1]~en.CLK
clk => count[2]~reg0.CLK
clk => count[2]~en.CLK
clk => count[3]~reg0.CLK
clk => count[3]~en.CLK
clk => count[4]~reg0.CLK
clk => count[4]~en.CLK
clk => count[5]~reg0.CLK
clk => count[5]~en.CLK
clk => count[6]~reg0.CLK
clk => count[6]~en.CLK
clk => count[7]~reg0.CLK
clk => count[7]~en.CLK
clk => count[8]~reg0.CLK
clk => count[8]~en.CLK
clk => count[9]~reg0.CLK
clk => count[9]~en.CLK
clk => count[10]~reg0.CLK
clk => count[10]~en.CLK
clk => count[11]~reg0.CLK
clk => count[11]~en.CLK
clk => count[12]~reg0.CLK
clk => count[12]~en.CLK
clk => count[13]~reg0.CLK
clk => count[13]~en.CLK
clk => count[14]~reg0.CLK
clk => count[14]~en.CLK
clk => count[15]~reg0.CLK
clk => count[15]~en.CLK
clk => count[16]~reg0.CLK
clk => count[16]~en.CLK
clk => count[17]~reg0.CLK
clk => count[17]~en.CLK
clk => count[18]~reg0.CLK
clk => count[18]~en.CLK
clk => count[19]~reg0.CLK
clk => count[19]~en.CLK
clk => count[20]~reg0.CLK
clk => count[20]~en.CLK
clk => count[21]~reg0.CLK
clk => count[21]~en.CLK
clk => count[22]~reg0.CLK
clk => count[22]~en.CLK
clk => count[23]~reg0.CLK
clk => count[23]~en.CLK
clk => count[24]~reg0.CLK
clk => count[24]~en.CLK
clk => count[25]~reg0.CLK
clk => count[25]~en.CLK
clk => count[26]~reg0.CLK
clk => count[26]~en.CLK
clk => count[27]~reg0.CLK
clk => count[27]~en.CLK
clk => term~reg0.CLK
clk => i_term.CLK
clk => i_count[0].CLK
clk => i_count[1].CLK
clk => i_count[2].CLK
clk => i_count[3].CLK
clk => i_count[4].CLK
clk => i_count[5].CLK
clk => i_count[6].CLK
clk => i_count[7].CLK
clk => i_count[8].CLK
clk => i_count[9].CLK
clk => i_count[10].CLK
clk => i_count[11].CLK
clk => i_count[12].CLK
clk => i_count[13].CLK
clk => i_count[14].CLK
clk => i_count[15].CLK
clk => i_count[16].CLK
clk => i_count[17].CLK
clk => i_count[18].CLK
clk => i_count[19].CLK
clk => i_count[20].CLK
clk => i_count[21].CLK
clk => i_count[22].CLK
clk => i_count[23].CLK
clk => i_count[24].CLK
clk => i_count[25].CLK
clk => i_count[26].CLK
clk => i_count[27].CLK
clk => max[0].CLK
clk => max[1].CLK
clk => max[2].CLK
clk => max[3].CLK
clk => max[4].CLK
clk => max[5].CLK
clk => max[6].CLK
clk => max[7].CLK
clk => max[8].CLK
clk => max[9].CLK
clk => max[10].CLK
clk => max[11].CLK
clk => max[12].CLK
clk => max[13].CLK
clk => max[14].CLK
clk => max[15].CLK
clk => max[16].CLK
clk => max[17].CLK
clk => max[18].CLK
clk => max[19].CLK
clk => max[20].CLK
clk => max[21].CLK
clk => max[22].CLK
clk => max[23].CLK
clk => max[24].CLK
clk => max[25].CLK
clk => max[26].CLK
clk => max[27].CLK
clk => max[28].CLK
clk => max[29].CLK
clk => max[30].CLK
inc => reset_load.IN1
inc => reset_load.IN1
data[0] => i_count.DATAB
data[1] => i_count.DATAB
data[2] => i_count.DATAB
data[3] => i_count.DATAB
data[4] => i_count.DATAB
data[5] => i_count.DATAB
data[6] => i_count.DATAB
data[7] => i_count.DATAB
data[8] => i_count.DATAB
data[9] => i_count.DATAB
data[10] => i_count.DATAB
data[11] => i_count.DATAB
data[12] => i_count.DATAB
data[13] => i_count.DATAB
data[14] => i_count.DATAB
data[15] => i_count.DATAB
data[16] => i_count.DATAB
data[17] => i_count.DATAB
data[18] => i_count.DATAB
data[19] => i_count.DATAB
data[20] => i_count.DATAB
data[21] => i_count.DATAB
data[22] => i_count.DATAB
data[23] => i_count.DATAB
data[24] => i_count.DATAB
data[25] => i_count.DATAB
data[26] => i_count.DATAB
data[27] => i_count.DATAB
state_read[0] => Equal0.IN1
state_read[0] => Equal1.IN0
state_read[0] => Equal2.IN1
state_read[1] => Equal0.IN0
state_read[1] => Equal1.IN1
state_read[1] => Equal2.IN0
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => i_term.OUTPUTSELECT
enable => count[0]~en.DATAIN
enable => count[1]~en.DATAIN
enable => count[2]~en.DATAIN
enable => count[3]~en.DATAIN
enable => count[4]~en.DATAIN
enable => count[5]~en.DATAIN
enable => count[6]~en.DATAIN
enable => count[7]~en.DATAIN
enable => count[8]~en.DATAIN
enable => count[9]~en.DATAIN
enable => count[10]~en.DATAIN
enable => count[11]~en.DATAIN
enable => count[12]~en.DATAIN
enable => count[13]~en.DATAIN
enable => count[14]~en.DATAIN
enable => count[15]~en.DATAIN
enable => count[16]~en.DATAIN
enable => count[17]~en.DATAIN
enable => count[18]~en.DATAIN
enable => count[19]~en.DATAIN
enable => count[20]~en.DATAIN
enable => count[21]~en.DATAIN
enable => count[22]~en.DATAIN
enable => count[23]~en.DATAIN
enable => count[24]~en.DATAIN
enable => count[25]~en.DATAIN
enable => count[26]~en.DATAIN
enable => count[27]~en.DATAIN
reset => i_count.OUTPUTSELECT
reset => i_count.OUTPUTSELECT
reset => i_count.OUTPUTSELECT
reset => i_count.OUTPUTSELECT
reset => i_count.OUTPUTSELECT
reset => i_count.OUTPUTSELECT
reset => i_count.OUTPUTSELECT
reset => i_count.OUTPUTSELECT
reset => i_count.OUTPUTSELECT
reset => i_count.OUTPUTSELECT
reset => i_count.OUTPUTSELECT
reset => i_count.OUTPUTSELECT
reset => i_count.OUTPUTSELECT
reset => i_count.OUTPUTSELECT
reset => i_count.OUTPUTSELECT
reset => i_count.OUTPUTSELECT
reset => i_count.OUTPUTSELECT
reset => i_count.OUTPUTSELECT
reset => i_count.OUTPUTSELECT
reset => i_count.OUTPUTSELECT
reset => i_count.OUTPUTSELECT
reset => i_count.OUTPUTSELECT
reset => i_count.OUTPUTSELECT
reset => i_count.OUTPUTSELECT
reset => i_count.OUTPUTSELECT
reset => i_count.OUTPUTSELECT
reset => i_count.OUTPUTSELECT
reset => i_count.OUTPUTSELECT
reset => i_term.OUTPUTSELECT
count[0] <= count[0].DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1].DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2].DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3].DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4].DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5].DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6].DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7].DB_MAX_OUTPUT_PORT_TYPE
count[8] <= count[8].DB_MAX_OUTPUT_PORT_TYPE
count[9] <= count[9].DB_MAX_OUTPUT_PORT_TYPE
count[10] <= count[10].DB_MAX_OUTPUT_PORT_TYPE
count[11] <= count[11].DB_MAX_OUTPUT_PORT_TYPE
count[12] <= count[12].DB_MAX_OUTPUT_PORT_TYPE
count[13] <= count[13].DB_MAX_OUTPUT_PORT_TYPE
count[14] <= count[14].DB_MAX_OUTPUT_PORT_TYPE
count[15] <= count[15].DB_MAX_OUTPUT_PORT_TYPE
count[16] <= count[16].DB_MAX_OUTPUT_PORT_TYPE
count[17] <= count[17].DB_MAX_OUTPUT_PORT_TYPE
count[18] <= count[18].DB_MAX_OUTPUT_PORT_TYPE
count[19] <= count[19].DB_MAX_OUTPUT_PORT_TYPE
count[20] <= count[20].DB_MAX_OUTPUT_PORT_TYPE
count[21] <= count[21].DB_MAX_OUTPUT_PORT_TYPE
count[22] <= count[22].DB_MAX_OUTPUT_PORT_TYPE
count[23] <= count[23].DB_MAX_OUTPUT_PORT_TYPE
count[24] <= count[24].DB_MAX_OUTPUT_PORT_TYPE
count[25] <= count[25].DB_MAX_OUTPUT_PORT_TYPE
count[26] <= count[26].DB_MAX_OUTPUT_PORT_TYPE
count[27] <= count[27].DB_MAX_OUTPUT_PORT_TYPE
term <= term~reg0.DB_MAX_OUTPUT_PORT_TYPE


|multi_elevator|modified_counter:counter2
clk => count[0]~reg0.CLK
clk => count[0]~en.CLK
clk => count[1]~reg0.CLK
clk => count[1]~en.CLK
clk => count[2]~reg0.CLK
clk => count[2]~en.CLK
clk => count[3]~reg0.CLK
clk => count[3]~en.CLK
clk => count[4]~reg0.CLK
clk => count[4]~en.CLK
clk => count[5]~reg0.CLK
clk => count[5]~en.CLK
clk => count[6]~reg0.CLK
clk => count[6]~en.CLK
clk => count[7]~reg0.CLK
clk => count[7]~en.CLK
clk => count[8]~reg0.CLK
clk => count[8]~en.CLK
clk => count[9]~reg0.CLK
clk => count[9]~en.CLK
clk => count[10]~reg0.CLK
clk => count[10]~en.CLK
clk => count[11]~reg0.CLK
clk => count[11]~en.CLK
clk => count[12]~reg0.CLK
clk => count[12]~en.CLK
clk => count[13]~reg0.CLK
clk => count[13]~en.CLK
clk => count[14]~reg0.CLK
clk => count[14]~en.CLK
clk => count[15]~reg0.CLK
clk => count[15]~en.CLK
clk => count[16]~reg0.CLK
clk => count[16]~en.CLK
clk => count[17]~reg0.CLK
clk => count[17]~en.CLK
clk => count[18]~reg0.CLK
clk => count[18]~en.CLK
clk => count[19]~reg0.CLK
clk => count[19]~en.CLK
clk => count[20]~reg0.CLK
clk => count[20]~en.CLK
clk => count[21]~reg0.CLK
clk => count[21]~en.CLK
clk => count[22]~reg0.CLK
clk => count[22]~en.CLK
clk => count[23]~reg0.CLK
clk => count[23]~en.CLK
clk => count[24]~reg0.CLK
clk => count[24]~en.CLK
clk => count[25]~reg0.CLK
clk => count[25]~en.CLK
clk => count[26]~reg0.CLK
clk => count[26]~en.CLK
clk => count[27]~reg0.CLK
clk => count[27]~en.CLK
clk => term~reg0.CLK
clk => i_term.CLK
clk => i_count[0].CLK
clk => i_count[1].CLK
clk => i_count[2].CLK
clk => i_count[3].CLK
clk => i_count[4].CLK
clk => i_count[5].CLK
clk => i_count[6].CLK
clk => i_count[7].CLK
clk => i_count[8].CLK
clk => i_count[9].CLK
clk => i_count[10].CLK
clk => i_count[11].CLK
clk => i_count[12].CLK
clk => i_count[13].CLK
clk => i_count[14].CLK
clk => i_count[15].CLK
clk => i_count[16].CLK
clk => i_count[17].CLK
clk => i_count[18].CLK
clk => i_count[19].CLK
clk => i_count[20].CLK
clk => i_count[21].CLK
clk => i_count[22].CLK
clk => i_count[23].CLK
clk => i_count[24].CLK
clk => i_count[25].CLK
clk => i_count[26].CLK
clk => i_count[27].CLK
clk => max[0].CLK
clk => max[1].CLK
clk => max[2].CLK
clk => max[3].CLK
clk => max[4].CLK
clk => max[5].CLK
clk => max[6].CLK
clk => max[7].CLK
clk => max[8].CLK
clk => max[9].CLK
clk => max[10].CLK
clk => max[11].CLK
clk => max[12].CLK
clk => max[13].CLK
clk => max[14].CLK
clk => max[15].CLK
clk => max[16].CLK
clk => max[17].CLK
clk => max[18].CLK
clk => max[19].CLK
clk => max[20].CLK
clk => max[21].CLK
clk => max[22].CLK
clk => max[23].CLK
clk => max[24].CLK
clk => max[25].CLK
clk => max[26].CLK
clk => max[27].CLK
clk => max[28].CLK
clk => max[29].CLK
clk => max[30].CLK
inc => reset_load.IN1
inc => reset_load.IN1
data[0] => i_count.DATAB
data[1] => i_count.DATAB
data[2] => i_count.DATAB
data[3] => i_count.DATAB
data[4] => i_count.DATAB
data[5] => i_count.DATAB
data[6] => i_count.DATAB
data[7] => i_count.DATAB
data[8] => i_count.DATAB
data[9] => i_count.DATAB
data[10] => i_count.DATAB
data[11] => i_count.DATAB
data[12] => i_count.DATAB
data[13] => i_count.DATAB
data[14] => i_count.DATAB
data[15] => i_count.DATAB
data[16] => i_count.DATAB
data[17] => i_count.DATAB
data[18] => i_count.DATAB
data[19] => i_count.DATAB
data[20] => i_count.DATAB
data[21] => i_count.DATAB
data[22] => i_count.DATAB
data[23] => i_count.DATAB
data[24] => i_count.DATAB
data[25] => i_count.DATAB
data[26] => i_count.DATAB
data[27] => i_count.DATAB
state_read[0] => Equal0.IN1
state_read[0] => Equal1.IN0
state_read[0] => Equal2.IN1
state_read[1] => Equal0.IN0
state_read[1] => Equal1.IN1
state_read[1] => Equal2.IN0
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => i_count.OUTPUTSELECT
load => i_term.OUTPUTSELECT
enable => count[0]~en.DATAIN
enable => count[1]~en.DATAIN
enable => count[2]~en.DATAIN
enable => count[3]~en.DATAIN
enable => count[4]~en.DATAIN
enable => count[5]~en.DATAIN
enable => count[6]~en.DATAIN
enable => count[7]~en.DATAIN
enable => count[8]~en.DATAIN
enable => count[9]~en.DATAIN
enable => count[10]~en.DATAIN
enable => count[11]~en.DATAIN
enable => count[12]~en.DATAIN
enable => count[13]~en.DATAIN
enable => count[14]~en.DATAIN
enable => count[15]~en.DATAIN
enable => count[16]~en.DATAIN
enable => count[17]~en.DATAIN
enable => count[18]~en.DATAIN
enable => count[19]~en.DATAIN
enable => count[20]~en.DATAIN
enable => count[21]~en.DATAIN
enable => count[22]~en.DATAIN
enable => count[23]~en.DATAIN
enable => count[24]~en.DATAIN
enable => count[25]~en.DATAIN
enable => count[26]~en.DATAIN
enable => count[27]~en.DATAIN
reset => i_count.OUTPUTSELECT
reset => i_count.OUTPUTSELECT
reset => i_count.OUTPUTSELECT
reset => i_count.OUTPUTSELECT
reset => i_count.OUTPUTSELECT
reset => i_count.OUTPUTSELECT
reset => i_count.OUTPUTSELECT
reset => i_count.OUTPUTSELECT
reset => i_count.OUTPUTSELECT
reset => i_count.OUTPUTSELECT
reset => i_count.OUTPUTSELECT
reset => i_count.OUTPUTSELECT
reset => i_count.OUTPUTSELECT
reset => i_count.OUTPUTSELECT
reset => i_count.OUTPUTSELECT
reset => i_count.OUTPUTSELECT
reset => i_count.OUTPUTSELECT
reset => i_count.OUTPUTSELECT
reset => i_count.OUTPUTSELECT
reset => i_count.OUTPUTSELECT
reset => i_count.OUTPUTSELECT
reset => i_count.OUTPUTSELECT
reset => i_count.OUTPUTSELECT
reset => i_count.OUTPUTSELECT
reset => i_count.OUTPUTSELECT
reset => i_count.OUTPUTSELECT
reset => i_count.OUTPUTSELECT
reset => i_count.OUTPUTSELECT
reset => i_term.OUTPUTSELECT
count[0] <= count[0].DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1].DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2].DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3].DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4].DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5].DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6].DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7].DB_MAX_OUTPUT_PORT_TYPE
count[8] <= count[8].DB_MAX_OUTPUT_PORT_TYPE
count[9] <= count[9].DB_MAX_OUTPUT_PORT_TYPE
count[10] <= count[10].DB_MAX_OUTPUT_PORT_TYPE
count[11] <= count[11].DB_MAX_OUTPUT_PORT_TYPE
count[12] <= count[12].DB_MAX_OUTPUT_PORT_TYPE
count[13] <= count[13].DB_MAX_OUTPUT_PORT_TYPE
count[14] <= count[14].DB_MAX_OUTPUT_PORT_TYPE
count[15] <= count[15].DB_MAX_OUTPUT_PORT_TYPE
count[16] <= count[16].DB_MAX_OUTPUT_PORT_TYPE
count[17] <= count[17].DB_MAX_OUTPUT_PORT_TYPE
count[18] <= count[18].DB_MAX_OUTPUT_PORT_TYPE
count[19] <= count[19].DB_MAX_OUTPUT_PORT_TYPE
count[20] <= count[20].DB_MAX_OUTPUT_PORT_TYPE
count[21] <= count[21].DB_MAX_OUTPUT_PORT_TYPE
count[22] <= count[22].DB_MAX_OUTPUT_PORT_TYPE
count[23] <= count[23].DB_MAX_OUTPUT_PORT_TYPE
count[24] <= count[24].DB_MAX_OUTPUT_PORT_TYPE
count[25] <= count[25].DB_MAX_OUTPUT_PORT_TYPE
count[26] <= count[26].DB_MAX_OUTPUT_PORT_TYPE
count[27] <= count[27].DB_MAX_OUTPUT_PORT_TYPE
term <= term~reg0.DB_MAX_OUTPUT_PORT_TYPE


|multi_elevator|elevator_unit_v1:ev1
clk => prev_dir[0].CLK
clk => prev_dir[1].CLK
clk => prev_next_floor[0].CLK
clk => prev_next_floor[1].CLK
clk => prev_next_floor[2].CLK
clk => prev_next_floor[3].CLK
clk => i_current_floor[0].CLK
clk => i_current_floor[1].CLK
clk => i_current_floor[2].CLK
clk => i_current_floor[3].CLK
clk => i_door.CLK
clk => state[0].CLK
clk => state[1].CLK
clk => i_stop_map[0].CLK
clk => i_stop_map[1].CLK
clk => i_stop_map[2].CLK
clk => i_stop_map[3].CLK
clk => i_stop_map[4].CLK
clk => i_stop_map[5].CLK
clk => i_stop_map[6].CLK
clk => i_stop_map[7].CLK
clk => i_stop_map[8].CLK
clk => i_stop_map[9].CLK
reset => state.OUTPUTSELECT
reset => state.OUTPUTSELECT
reset => i_current_floor[0].ENA
reset => i_current_floor[1].ENA
reset => i_current_floor[2].ENA
reset => i_current_floor[3].ENA
reset => i_door.ENA
load_request => i_stop_map.OUTPUTSELECT
load_request => i_stop_map.OUTPUTSELECT
load_request => i_stop_map.OUTPUTSELECT
load_request => i_stop_map.OUTPUTSELECT
load_request => i_stop_map.OUTPUTSELECT
load_request => i_stop_map.OUTPUTSELECT
load_request => i_stop_map.OUTPUTSELECT
load_request => i_stop_map.OUTPUTSELECT
load_request => i_stop_map.OUTPUTSELECT
load_request => i_stop_map.OUTPUTSELECT
state_shift => i_door.OUTPUTSELECT
state_shift => i_current_floor.OUTPUTSELECT
state_shift => i_current_floor.OUTPUTSELECT
state_shift => i_current_floor.OUTPUTSELECT
state_shift => i_current_floor.OUTPUTSELECT
state_shift => state.OUTPUTSELECT
state_shift => state.OUTPUTSELECT
open_req => i_door.OUTPUTSELECT
up_array[0] => Mux1.IN15
up_array[0] => LessThan2.IN10
up_array[0] => Equal1.IN19
up_array[0] => LessThan4.IN10
up_array[0] => RESULT.IN1
up_array[1] => Mux1.IN14
up_array[1] => LessThan2.IN9
up_array[1] => Equal1.IN18
up_array[1] => LessThan4.IN9
up_array[1] => RESULT.IN1
up_array[2] => Mux1.IN13
up_array[2] => LessThan2.IN8
up_array[2] => Equal1.IN17
up_array[2] => LessThan4.IN8
up_array[2] => RESULT.IN1
up_array[3] => Mux1.IN12
up_array[3] => LessThan2.IN7
up_array[3] => Equal1.IN16
up_array[3] => LessThan4.IN7
up_array[3] => RESULT.IN1
up_array[4] => Mux1.IN11
up_array[4] => LessThan2.IN6
up_array[4] => Equal1.IN15
up_array[4] => LessThan4.IN6
up_array[4] => RESULT.IN1
up_array[5] => Mux1.IN10
up_array[5] => LessThan2.IN5
up_array[5] => Equal1.IN14
up_array[5] => LessThan4.IN5
up_array[5] => RESULT.IN1
up_array[6] => Mux1.IN9
up_array[6] => LessThan2.IN4
up_array[6] => Equal1.IN13
up_array[6] => LessThan4.IN4
up_array[6] => RESULT.IN1
up_array[7] => Mux1.IN8
up_array[7] => LessThan2.IN3
up_array[7] => Equal1.IN12
up_array[7] => LessThan4.IN3
up_array[7] => RESULT.IN1
up_array[8] => Mux1.IN7
up_array[8] => LessThan2.IN2
up_array[8] => Equal1.IN11
up_array[8] => LessThan4.IN2
up_array[8] => RESULT.IN1
up_array[9] => Mux1.IN6
up_array[9] => LessThan2.IN1
up_array[9] => Equal1.IN10
up_array[9] => LessThan4.IN1
up_array[9] => RESULT.IN1
down_array[0] => LessThan3.IN10
down_array[0] => Equal2.IN19
down_array[0] => LessThan5.IN10
down_array[0] => RESULT.IN1
down_array[0] => Mux2.IN15
down_array[1] => LessThan3.IN9
down_array[1] => Equal2.IN18
down_array[1] => LessThan5.IN9
down_array[1] => RESULT.IN1
down_array[1] => Mux2.IN14
down_array[2] => LessThan3.IN8
down_array[2] => Equal2.IN17
down_array[2] => LessThan5.IN8
down_array[2] => RESULT.IN1
down_array[2] => Mux2.IN13
down_array[3] => LessThan3.IN7
down_array[3] => Equal2.IN16
down_array[3] => LessThan5.IN7
down_array[3] => RESULT.IN1
down_array[3] => Mux2.IN12
down_array[4] => LessThan3.IN6
down_array[4] => Equal2.IN15
down_array[4] => LessThan5.IN6
down_array[4] => RESULT.IN1
down_array[4] => Mux2.IN11
down_array[5] => LessThan3.IN5
down_array[5] => Equal2.IN14
down_array[5] => LessThan5.IN5
down_array[5] => RESULT.IN1
down_array[5] => Mux2.IN10
down_array[6] => LessThan3.IN4
down_array[6] => Equal2.IN13
down_array[6] => LessThan5.IN4
down_array[6] => RESULT.IN1
down_array[6] => Mux2.IN9
down_array[7] => LessThan3.IN3
down_array[7] => Equal2.IN12
down_array[7] => LessThan5.IN3
down_array[7] => RESULT.IN1
down_array[7] => Mux2.IN8
down_array[8] => LessThan3.IN2
down_array[8] => Equal2.IN11
down_array[8] => LessThan5.IN2
down_array[8] => RESULT.IN1
down_array[8] => Mux2.IN7
down_array[9] => LessThan3.IN1
down_array[9] => Equal2.IN10
down_array[9] => LessThan5.IN1
down_array[9] => RESULT.IN1
down_array[9] => Mux2.IN6
request_floor[0] => Decoder0.IN3
request_floor[1] => Decoder0.IN2
request_floor[2] => Decoder0.IN1
request_floor[3] => Decoder0.IN0
door <= Mux13.DB_MAX_OUTPUT_PORT_TYPE
req_ack <= Mux11.DB_MAX_OUTPUT_PORT_TYPE
dir[0] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
dir[1] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
current_floor[0] <= i_current_floor[0].DB_MAX_OUTPUT_PORT_TYPE
current_floor[1] <= i_current_floor[1].DB_MAX_OUTPUT_PORT_TYPE
current_floor[2] <= i_current_floor[2].DB_MAX_OUTPUT_PORT_TYPE
current_floor[3] <= i_current_floor[3].DB_MAX_OUTPUT_PORT_TYPE
stop_map[0] <= i_stop_map[0].DB_MAX_OUTPUT_PORT_TYPE
stop_map[1] <= i_stop_map[1].DB_MAX_OUTPUT_PORT_TYPE
stop_map[2] <= i_stop_map[2].DB_MAX_OUTPUT_PORT_TYPE
stop_map[3] <= i_stop_map[3].DB_MAX_OUTPUT_PORT_TYPE
stop_map[4] <= i_stop_map[4].DB_MAX_OUTPUT_PORT_TYPE
stop_map[5] <= i_stop_map[5].DB_MAX_OUTPUT_PORT_TYPE
stop_map[6] <= i_stop_map[6].DB_MAX_OUTPUT_PORT_TYPE
stop_map[7] <= i_stop_map[7].DB_MAX_OUTPUT_PORT_TYPE
stop_map[8] <= i_stop_map[8].DB_MAX_OUTPUT_PORT_TYPE
stop_map[9] <= i_stop_map[9].DB_MAX_OUTPUT_PORT_TYPE
current_state[0] <= state[0].DB_MAX_OUTPUT_PORT_TYPE
current_state[1] <= state[1].DB_MAX_OUTPUT_PORT_TYPE


|multi_elevator|elevator_unit_v1:ev2
clk => prev_dir[0].CLK
clk => prev_dir[1].CLK
clk => prev_next_floor[0].CLK
clk => prev_next_floor[1].CLK
clk => prev_next_floor[2].CLK
clk => prev_next_floor[3].CLK
clk => i_current_floor[0].CLK
clk => i_current_floor[1].CLK
clk => i_current_floor[2].CLK
clk => i_current_floor[3].CLK
clk => i_door.CLK
clk => state[0].CLK
clk => state[1].CLK
clk => i_stop_map[0].CLK
clk => i_stop_map[1].CLK
clk => i_stop_map[2].CLK
clk => i_stop_map[3].CLK
clk => i_stop_map[4].CLK
clk => i_stop_map[5].CLK
clk => i_stop_map[6].CLK
clk => i_stop_map[7].CLK
clk => i_stop_map[8].CLK
clk => i_stop_map[9].CLK
reset => state.OUTPUTSELECT
reset => state.OUTPUTSELECT
reset => i_current_floor[0].ENA
reset => i_current_floor[1].ENA
reset => i_current_floor[2].ENA
reset => i_current_floor[3].ENA
reset => i_door.ENA
load_request => i_stop_map.OUTPUTSELECT
load_request => i_stop_map.OUTPUTSELECT
load_request => i_stop_map.OUTPUTSELECT
load_request => i_stop_map.OUTPUTSELECT
load_request => i_stop_map.OUTPUTSELECT
load_request => i_stop_map.OUTPUTSELECT
load_request => i_stop_map.OUTPUTSELECT
load_request => i_stop_map.OUTPUTSELECT
load_request => i_stop_map.OUTPUTSELECT
load_request => i_stop_map.OUTPUTSELECT
state_shift => i_door.OUTPUTSELECT
state_shift => i_current_floor.OUTPUTSELECT
state_shift => i_current_floor.OUTPUTSELECT
state_shift => i_current_floor.OUTPUTSELECT
state_shift => i_current_floor.OUTPUTSELECT
state_shift => state.OUTPUTSELECT
state_shift => state.OUTPUTSELECT
open_req => i_door.OUTPUTSELECT
up_array[0] => Mux1.IN15
up_array[0] => LessThan2.IN10
up_array[0] => Equal1.IN19
up_array[0] => LessThan4.IN10
up_array[0] => RESULT.IN1
up_array[1] => Mux1.IN14
up_array[1] => LessThan2.IN9
up_array[1] => Equal1.IN18
up_array[1] => LessThan4.IN9
up_array[1] => RESULT.IN1
up_array[2] => Mux1.IN13
up_array[2] => LessThan2.IN8
up_array[2] => Equal1.IN17
up_array[2] => LessThan4.IN8
up_array[2] => RESULT.IN1
up_array[3] => Mux1.IN12
up_array[3] => LessThan2.IN7
up_array[3] => Equal1.IN16
up_array[3] => LessThan4.IN7
up_array[3] => RESULT.IN1
up_array[4] => Mux1.IN11
up_array[4] => LessThan2.IN6
up_array[4] => Equal1.IN15
up_array[4] => LessThan4.IN6
up_array[4] => RESULT.IN1
up_array[5] => Mux1.IN10
up_array[5] => LessThan2.IN5
up_array[5] => Equal1.IN14
up_array[5] => LessThan4.IN5
up_array[5] => RESULT.IN1
up_array[6] => Mux1.IN9
up_array[6] => LessThan2.IN4
up_array[6] => Equal1.IN13
up_array[6] => LessThan4.IN4
up_array[6] => RESULT.IN1
up_array[7] => Mux1.IN8
up_array[7] => LessThan2.IN3
up_array[7] => Equal1.IN12
up_array[7] => LessThan4.IN3
up_array[7] => RESULT.IN1
up_array[8] => Mux1.IN7
up_array[8] => LessThan2.IN2
up_array[8] => Equal1.IN11
up_array[8] => LessThan4.IN2
up_array[8] => RESULT.IN1
up_array[9] => Mux1.IN6
up_array[9] => LessThan2.IN1
up_array[9] => Equal1.IN10
up_array[9] => LessThan4.IN1
up_array[9] => RESULT.IN1
down_array[0] => LessThan3.IN10
down_array[0] => Equal2.IN19
down_array[0] => LessThan5.IN10
down_array[0] => RESULT.IN1
down_array[0] => Mux2.IN15
down_array[1] => LessThan3.IN9
down_array[1] => Equal2.IN18
down_array[1] => LessThan5.IN9
down_array[1] => RESULT.IN1
down_array[1] => Mux2.IN14
down_array[2] => LessThan3.IN8
down_array[2] => Equal2.IN17
down_array[2] => LessThan5.IN8
down_array[2] => RESULT.IN1
down_array[2] => Mux2.IN13
down_array[3] => LessThan3.IN7
down_array[3] => Equal2.IN16
down_array[3] => LessThan5.IN7
down_array[3] => RESULT.IN1
down_array[3] => Mux2.IN12
down_array[4] => LessThan3.IN6
down_array[4] => Equal2.IN15
down_array[4] => LessThan5.IN6
down_array[4] => RESULT.IN1
down_array[4] => Mux2.IN11
down_array[5] => LessThan3.IN5
down_array[5] => Equal2.IN14
down_array[5] => LessThan5.IN5
down_array[5] => RESULT.IN1
down_array[5] => Mux2.IN10
down_array[6] => LessThan3.IN4
down_array[6] => Equal2.IN13
down_array[6] => LessThan5.IN4
down_array[6] => RESULT.IN1
down_array[6] => Mux2.IN9
down_array[7] => LessThan3.IN3
down_array[7] => Equal2.IN12
down_array[7] => LessThan5.IN3
down_array[7] => RESULT.IN1
down_array[7] => Mux2.IN8
down_array[8] => LessThan3.IN2
down_array[8] => Equal2.IN11
down_array[8] => LessThan5.IN2
down_array[8] => RESULT.IN1
down_array[8] => Mux2.IN7
down_array[9] => LessThan3.IN1
down_array[9] => Equal2.IN10
down_array[9] => LessThan5.IN1
down_array[9] => RESULT.IN1
down_array[9] => Mux2.IN6
request_floor[0] => Decoder0.IN3
request_floor[1] => Decoder0.IN2
request_floor[2] => Decoder0.IN1
request_floor[3] => Decoder0.IN0
door <= Mux13.DB_MAX_OUTPUT_PORT_TYPE
req_ack <= Mux11.DB_MAX_OUTPUT_PORT_TYPE
dir[0] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
dir[1] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
current_floor[0] <= i_current_floor[0].DB_MAX_OUTPUT_PORT_TYPE
current_floor[1] <= i_current_floor[1].DB_MAX_OUTPUT_PORT_TYPE
current_floor[2] <= i_current_floor[2].DB_MAX_OUTPUT_PORT_TYPE
current_floor[3] <= i_current_floor[3].DB_MAX_OUTPUT_PORT_TYPE
stop_map[0] <= i_stop_map[0].DB_MAX_OUTPUT_PORT_TYPE
stop_map[1] <= i_stop_map[1].DB_MAX_OUTPUT_PORT_TYPE
stop_map[2] <= i_stop_map[2].DB_MAX_OUTPUT_PORT_TYPE
stop_map[3] <= i_stop_map[3].DB_MAX_OUTPUT_PORT_TYPE
stop_map[4] <= i_stop_map[4].DB_MAX_OUTPUT_PORT_TYPE
stop_map[5] <= i_stop_map[5].DB_MAX_OUTPUT_PORT_TYPE
stop_map[6] <= i_stop_map[6].DB_MAX_OUTPUT_PORT_TYPE
stop_map[7] <= i_stop_map[7].DB_MAX_OUTPUT_PORT_TYPE
stop_map[8] <= i_stop_map[8].DB_MAX_OUTPUT_PORT_TYPE
stop_map[9] <= i_stop_map[9].DB_MAX_OUTPUT_PORT_TYPE
current_state[0] <= state[0].DB_MAX_OUTPUT_PORT_TYPE
current_state[1] <= state[1].DB_MAX_OUTPUT_PORT_TYPE


|multi_elevator|generic_multiplexer:cfmultiplexer
clk => output[0]~reg0.CLK
clk => output[1]~reg0.CLK
clk => output[2]~reg0.CLK
clk => output[3]~reg0.CLK
clk => i_input[0].CLK
clk => i_input[1].CLK
clk => i_input[2].CLK
clk => i_input[3].CLK
input_array[0] => ShiftRight0.IN10
input_array[1] => ShiftRight0.IN9
input_array[2] => ShiftRight0.IN8
input_array[3] => ShiftRight0.IN7
input_array[4] => ShiftRight0.IN6
input_array[5] => ShiftRight0.IN5
input_array[6] => ShiftRight0.IN4
input_array[7] => ShiftRight0.IN3
input_sel[0] => ShiftRight0.IN11
output[0] <= output[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[1] <= output[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[2] <= output[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[3] <= output[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|multi_elevator|generic_multiplexer:ocmultiplexer
clk => output[0]~reg0.CLK
clk => i_input[0].CLK
input_array[0] => ShiftRight0.IN2
input_array[1] => ShiftRight0.IN1
input_sel[0] => ShiftRight0.IN3
output[0] <= output[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|multi_elevator|generic_multiplexer:smmultiplexer
clk => output[0]~reg0.CLK
clk => output[1]~reg0.CLK
clk => output[2]~reg0.CLK
clk => output[3]~reg0.CLK
clk => output[4]~reg0.CLK
clk => output[5]~reg0.CLK
clk => output[6]~reg0.CLK
clk => output[7]~reg0.CLK
clk => output[8]~reg0.CLK
clk => output[9]~reg0.CLK
clk => i_input[0].CLK
clk => i_input[1].CLK
clk => i_input[2].CLK
clk => i_input[3].CLK
clk => i_input[4].CLK
clk => i_input[5].CLK
clk => i_input[6].CLK
clk => i_input[7].CLK
clk => i_input[8].CLK
clk => i_input[9].CLK
input_array[0] => ShiftRight0.IN22
input_array[1] => ShiftRight0.IN21
input_array[2] => ShiftRight0.IN20
input_array[3] => ShiftRight0.IN19
input_array[4] => ShiftRight0.IN18
input_array[5] => ShiftRight0.IN17
input_array[6] => ShiftRight0.IN16
input_array[7] => ShiftRight0.IN15
input_array[8] => ShiftRight0.IN14
input_array[9] => ShiftRight0.IN13
input_array[10] => ShiftRight0.IN12
input_array[11] => ShiftRight0.IN11
input_array[12] => ShiftRight0.IN10
input_array[13] => ShiftRight0.IN9
input_array[14] => ShiftRight0.IN8
input_array[15] => ShiftRight0.IN7
input_array[16] => ShiftRight0.IN6
input_array[17] => ShiftRight0.IN5
input_array[18] => ShiftRight0.IN4
input_array[19] => ShiftRight0.IN3
input_sel[0] => ShiftRight0.IN23
input_sel[0] => ShiftRight0.IN24
output[0] <= output[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[1] <= output[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[2] <= output[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[3] <= output[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[4] <= output[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[5] <= output[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[6] <= output[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[7] <= output[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[8] <= output[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[9] <= output[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|multi_elevator|elevator_cortex:cortex
clk => down_array[0]~reg0.CLK
clk => down_array[1]~reg0.CLK
clk => down_array[2]~reg0.CLK
clk => down_array[3]~reg0.CLK
clk => down_array[4]~reg0.CLK
clk => down_array[5]~reg0.CLK
clk => down_array[6]~reg0.CLK
clk => down_array[7]~reg0.CLK
clk => down_array[8]~reg0.CLK
clk => up_array[0]~reg0.CLK
clk => up_array[1]~reg0.CLK
clk => up_array[2]~reg0.CLK
clk => up_array[3]~reg0.CLK
clk => up_array[4]~reg0.CLK
clk => up_array[5]~reg0.CLK
clk => up_array[6]~reg0.CLK
clk => up_array[7]~reg0.CLK
clk => up_array[8]~reg0.CLK
up_button => up_array.OUTPUTSELECT
up_button => up_array.OUTPUTSELECT
up_button => up_array.OUTPUTSELECT
up_button => up_array.OUTPUTSELECT
up_button => up_array.OUTPUTSELECT
up_button => up_array.OUTPUTSELECT
up_button => up_array.OUTPUTSELECT
up_button => up_array.OUTPUTSELECT
up_button => up_array.OUTPUTSELECT
down_button => down_array.OUTPUTSELECT
down_button => down_array.OUTPUTSELECT
down_button => down_array.OUTPUTSELECT
down_button => down_array.OUTPUTSELECT
down_button => down_array.OUTPUTSELECT
down_button => down_array.OUTPUTSELECT
down_button => down_array.OUTPUTSELECT
down_button => down_array.OUTPUTSELECT
down_button => down_array.OUTPUTSELECT
call_floor[0] => Decoder4.IN3
call_floor[0] => Add2.IN8
call_floor[1] => Decoder4.IN2
call_floor[1] => Add2.IN7
call_floor[2] => Decoder4.IN1
call_floor[2] => Add2.IN6
call_floor[3] => Decoder4.IN0
call_floor[3] => Add2.IN5
floor_array[0] => Decoder0.IN3
floor_array[0] => Add0.IN8
floor_array[1] => Decoder0.IN2
floor_array[1] => Add0.IN7
floor_array[2] => Decoder0.IN1
floor_array[2] => Add0.IN6
floor_array[3] => Decoder0.IN0
floor_array[3] => Add0.IN5
floor_array[4] => Decoder2.IN3
floor_array[4] => Add1.IN8
floor_array[5] => Decoder2.IN2
floor_array[5] => Add1.IN7
floor_array[6] => Decoder2.IN1
floor_array[6] => Add1.IN6
floor_array[7] => Decoder2.IN0
floor_array[7] => Add1.IN5
dir_array[0] => Equal1.IN1
dir_array[0] => Equal2.IN0
dir_array[1] => Equal1.IN0
dir_array[1] => Equal2.IN1
dir_array[2] => Equal3.IN1
dir_array[2] => Equal4.IN0
dir_array[3] => Equal3.IN0
dir_array[3] => Equal4.IN1
elevator_ready[0] => Equal0.IN3
elevator_ready[0] => up_array.OUTPUTSELECT
elevator_ready[0] => up_array.OUTPUTSELECT
elevator_ready[0] => up_array.OUTPUTSELECT
elevator_ready[0] => up_array.OUTPUTSELECT
elevator_ready[0] => up_array.OUTPUTSELECT
elevator_ready[0] => up_array.OUTPUTSELECT
elevator_ready[0] => up_array.OUTPUTSELECT
elevator_ready[0] => up_array.OUTPUTSELECT
elevator_ready[0] => up_array.OUTPUTSELECT
elevator_ready[0] => down_array.OUTPUTSELECT
elevator_ready[0] => down_array.OUTPUTSELECT
elevator_ready[0] => down_array.OUTPUTSELECT
elevator_ready[0] => down_array.OUTPUTSELECT
elevator_ready[0] => down_array.OUTPUTSELECT
elevator_ready[0] => down_array.OUTPUTSELECT
elevator_ready[0] => down_array.OUTPUTSELECT
elevator_ready[0] => down_array.OUTPUTSELECT
elevator_ready[0] => down_array.OUTPUTSELECT
elevator_ready[1] => Equal0.IN2
elevator_ready[1] => up_array.OUTPUTSELECT
elevator_ready[1] => up_array.OUTPUTSELECT
elevator_ready[1] => up_array.OUTPUTSELECT
elevator_ready[1] => up_array.OUTPUTSELECT
elevator_ready[1] => up_array.OUTPUTSELECT
elevator_ready[1] => up_array.OUTPUTSELECT
elevator_ready[1] => up_array.OUTPUTSELECT
elevator_ready[1] => up_array.OUTPUTSELECT
elevator_ready[1] => up_array.OUTPUTSELECT
elevator_ready[1] => down_array.OUTPUTSELECT
elevator_ready[1] => down_array.OUTPUTSELECT
elevator_ready[1] => down_array.OUTPUTSELECT
elevator_ready[1] => down_array.OUTPUTSELECT
elevator_ready[1] => down_array.OUTPUTSELECT
elevator_ready[1] => down_array.OUTPUTSELECT
elevator_ready[1] => down_array.OUTPUTSELECT
elevator_ready[1] => down_array.OUTPUTSELECT
elevator_ready[1] => down_array.OUTPUTSELECT
up_array[0] <= up_array[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
up_array[1] <= up_array[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
up_array[2] <= up_array[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
up_array[3] <= up_array[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
up_array[4] <= up_array[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
up_array[5] <= up_array[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
up_array[6] <= up_array[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
up_array[7] <= up_array[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
up_array[8] <= up_array[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
down_array[0] <= down_array[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
down_array[1] <= down_array[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
down_array[2] <= down_array[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
down_array[3] <= down_array[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
down_array[4] <= down_array[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
down_array[5] <= down_array[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
down_array[6] <= down_array[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
down_array[7] <= down_array[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
down_array[8] <= down_array[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|multi_elevator|display_driver:current_display
input[0] => Equal0.IN7
input[0] => Equal1.IN7
input[0] => Equal2.IN7
input[0] => Equal3.IN7
input[0] => Equal4.IN7
input[0] => Equal5.IN7
input[0] => Equal6.IN7
input[0] => Equal7.IN7
input[0] => Equal8.IN7
input[0] => Equal9.IN7
input[1] => Equal0.IN6
input[1] => Equal1.IN6
input[1] => Equal2.IN6
input[1] => Equal3.IN6
input[1] => Equal4.IN6
input[1] => Equal5.IN6
input[1] => Equal6.IN6
input[1] => Equal7.IN6
input[1] => Equal8.IN6
input[1] => Equal9.IN6
input[2] => Equal0.IN5
input[2] => Equal1.IN5
input[2] => Equal2.IN5
input[2] => Equal3.IN5
input[2] => Equal4.IN5
input[2] => Equal5.IN5
input[2] => Equal6.IN5
input[2] => Equal7.IN5
input[2] => Equal8.IN5
input[2] => Equal9.IN5
input[3] => Equal0.IN4
input[3] => Equal1.IN4
input[3] => Equal2.IN4
input[3] => Equal3.IN4
input[3] => Equal4.IN4
input[3] => Equal5.IN4
input[3] => Equal6.IN4
input[3] => Equal7.IN4
input[3] => Equal8.IN4
input[3] => Equal9.IN4
display[0] <= display.DB_MAX_OUTPUT_PORT_TYPE
display[1] <= display.DB_MAX_OUTPUT_PORT_TYPE
display[2] <= display.DB_MAX_OUTPUT_PORT_TYPE
display[3] <= display.DB_MAX_OUTPUT_PORT_TYPE
display[4] <= display.DB_MAX_OUTPUT_PORT_TYPE
display[5] <= display.DB_MAX_OUTPUT_PORT_TYPE
display[6] <= display.DB_MAX_OUTPUT_PORT_TYPE


|multi_elevator|open_close_display:door_display
input => display[2].DATAIN
display[0] <= <VCC>
display[1] <= <VCC>
display[2] <= input.DB_MAX_OUTPUT_PORT_TYPE
display[3] <= <GND>
display[4] <= <GND>
display[5] <= <VCC>
display[6] <= <GND>


|multi_elevator|display_driver:request_display
input[0] => Equal0.IN7
input[0] => Equal1.IN7
input[0] => Equal2.IN7
input[0] => Equal3.IN7
input[0] => Equal4.IN7
input[0] => Equal5.IN7
input[0] => Equal6.IN7
input[0] => Equal7.IN7
input[0] => Equal8.IN7
input[0] => Equal9.IN7
input[1] => Equal0.IN6
input[1] => Equal1.IN6
input[1] => Equal2.IN6
input[1] => Equal3.IN6
input[1] => Equal4.IN6
input[1] => Equal5.IN6
input[1] => Equal6.IN6
input[1] => Equal7.IN6
input[1] => Equal8.IN6
input[1] => Equal9.IN6
input[2] => Equal0.IN5
input[2] => Equal1.IN5
input[2] => Equal2.IN5
input[2] => Equal3.IN5
input[2] => Equal4.IN5
input[2] => Equal5.IN5
input[2] => Equal6.IN5
input[2] => Equal7.IN5
input[2] => Equal8.IN5
input[2] => Equal9.IN5
input[3] => Equal0.IN4
input[3] => Equal1.IN4
input[3] => Equal2.IN4
input[3] => Equal3.IN4
input[3] => Equal4.IN4
input[3] => Equal5.IN4
input[3] => Equal6.IN4
input[3] => Equal7.IN4
input[3] => Equal8.IN4
input[3] => Equal9.IN4
display[0] <= display.DB_MAX_OUTPUT_PORT_TYPE
display[1] <= display.DB_MAX_OUTPUT_PORT_TYPE
display[2] <= display.DB_MAX_OUTPUT_PORT_TYPE
display[3] <= display.DB_MAX_OUTPUT_PORT_TYPE
display[4] <= display.DB_MAX_OUTPUT_PORT_TYPE
display[5] <= display.DB_MAX_OUTPUT_PORT_TYPE
display[6] <= display.DB_MAX_OUTPUT_PORT_TYPE


|multi_elevator|display_driver:call_display
input[0] => Equal0.IN7
input[0] => Equal1.IN7
input[0] => Equal2.IN7
input[0] => Equal3.IN7
input[0] => Equal4.IN7
input[0] => Equal5.IN7
input[0] => Equal6.IN7
input[0] => Equal7.IN7
input[0] => Equal8.IN7
input[0] => Equal9.IN7
input[1] => Equal0.IN6
input[1] => Equal1.IN6
input[1] => Equal2.IN6
input[1] => Equal3.IN6
input[1] => Equal4.IN6
input[1] => Equal5.IN6
input[1] => Equal6.IN6
input[1] => Equal7.IN6
input[1] => Equal8.IN6
input[1] => Equal9.IN6
input[2] => Equal0.IN5
input[2] => Equal1.IN5
input[2] => Equal2.IN5
input[2] => Equal3.IN5
input[2] => Equal4.IN5
input[2] => Equal5.IN5
input[2] => Equal6.IN5
input[2] => Equal7.IN5
input[2] => Equal8.IN5
input[2] => Equal9.IN5
input[3] => Equal0.IN4
input[3] => Equal1.IN4
input[3] => Equal2.IN4
input[3] => Equal3.IN4
input[3] => Equal4.IN4
input[3] => Equal5.IN4
input[3] => Equal6.IN4
input[3] => Equal7.IN4
input[3] => Equal8.IN4
input[3] => Equal9.IN4
display[0] <= display.DB_MAX_OUTPUT_PORT_TYPE
display[1] <= display.DB_MAX_OUTPUT_PORT_TYPE
display[2] <= display.DB_MAX_OUTPUT_PORT_TYPE
display[3] <= display.DB_MAX_OUTPUT_PORT_TYPE
display[4] <= display.DB_MAX_OUTPUT_PORT_TYPE
display[5] <= display.DB_MAX_OUTPUT_PORT_TYPE
display[6] <= display.DB_MAX_OUTPUT_PORT_TYPE


|multi_elevator|display_driver:elevator_number
input[0] => Equal0.IN7
input[0] => Equal1.IN7
input[0] => Equal2.IN7
input[0] => Equal3.IN7
input[0] => Equal4.IN7
input[0] => Equal5.IN7
input[0] => Equal6.IN7
input[0] => Equal7.IN7
input[0] => Equal8.IN7
input[0] => Equal9.IN7
input[1] => Equal0.IN6
input[1] => Equal1.IN6
input[1] => Equal2.IN6
input[1] => Equal3.IN6
input[1] => Equal4.IN6
input[1] => Equal5.IN6
input[1] => Equal6.IN6
input[1] => Equal7.IN6
input[1] => Equal8.IN6
input[1] => Equal9.IN6
input[2] => Equal0.IN5
input[2] => Equal1.IN5
input[2] => Equal2.IN5
input[2] => Equal3.IN5
input[2] => Equal4.IN5
input[2] => Equal5.IN5
input[2] => Equal6.IN5
input[2] => Equal7.IN5
input[2] => Equal8.IN5
input[2] => Equal9.IN5
input[3] => Equal0.IN4
input[3] => Equal1.IN4
input[3] => Equal2.IN4
input[3] => Equal3.IN4
input[3] => Equal4.IN4
input[3] => Equal5.IN4
input[3] => Equal6.IN4
input[3] => Equal7.IN4
input[3] => Equal8.IN4
input[3] => Equal9.IN4
display[0] <= display.DB_MAX_OUTPUT_PORT_TYPE
display[1] <= display.DB_MAX_OUTPUT_PORT_TYPE
display[2] <= display.DB_MAX_OUTPUT_PORT_TYPE
display[3] <= display.DB_MAX_OUTPUT_PORT_TYPE
display[4] <= display.DB_MAX_OUTPUT_PORT_TYPE
display[5] <= display.DB_MAX_OUTPUT_PORT_TYPE
display[6] <= display.DB_MAX_OUTPUT_PORT_TYPE


|multi_elevator|up_down_display:uddisplay
clk => display[0]~reg0.CLK
clk => display[1]~reg0.CLK
clk => display[2]~reg0.CLK
clk => display[3]~reg0.CLK
clk => display[4]~reg0.CLK
clk => display[5]~reg0.CLK
clk => display[6]~reg0.CLK
clk => i_display[0].CLK
clk => i_display[1].CLK
clk => i_display[2].CLK
clk => i_display[3].CLK
clk => i_display[4].CLK
clk => i_display[5].CLK
clk => i_display[6].CLK
up_array[0] => Mux0.IN15
up_array[1] => Mux0.IN14
up_array[2] => Mux0.IN13
up_array[3] => Mux0.IN12
up_array[4] => Mux0.IN11
up_array[5] => Mux0.IN10
up_array[6] => Mux0.IN9
up_array[7] => Mux0.IN8
up_array[8] => Mux0.IN7
up_array[9] => Mux0.IN6
down_array[0] => Mux1.IN15
down_array[1] => Mux1.IN14
down_array[2] => Mux1.IN13
down_array[3] => Mux1.IN12
down_array[4] => Mux1.IN11
down_array[5] => Mux1.IN10
down_array[6] => Mux1.IN9
down_array[7] => Mux1.IN8
down_array[8] => Mux1.IN7
down_array[9] => Mux1.IN6
call[0] => Mux0.IN19
call[0] => Mux1.IN19
call[1] => Mux0.IN18
call[1] => Mux1.IN18
call[2] => Mux0.IN17
call[2] => Mux1.IN17
call[3] => Mux0.IN16
call[3] => Mux1.IN16
display[0] <= display[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display[1] <= display[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display[2] <= display[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display[3] <= display[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display[4] <= display[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display[5] <= display[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
display[6] <= display[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE


